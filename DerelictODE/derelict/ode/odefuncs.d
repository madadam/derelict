/*

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

*/
module derelict.ode.odefuncs;

private
{
    import derelict.util.compat;
    import derelict.ode.odetypes;
    
    version(Tango)
    {
        import tango.stdc.stdio;
    }
    else
    {
        import std.c.stdio;
    }
}

extern(C)
{
    mixin(gsharedString!() ~
    "
    // common.h
    char* function() dGetConfiguration;
    int function(in char*) dCheckConfiguration;

    // collision.h
    void function(dGeomID) dGeomDestroy;
    void function(dGeomID, void*) dGeomSetData;
    void* function(dGeomID) dGeomGetData;
    void function(dGeomID, dBodyID) dGeomSetBody;
    dBodyID function(dGeomID) dGeomGetBody;
    void function(dGeomID, dReal, dReal, dReal) dGeomSetPosition;
    void function(dGeomID, in dMatrix3) dGeomSetRotation;
    void function(dGeomID, in dQuaternion) dGeomSetQuaternion;
    dReal* function(dGeomID) dGeomGetPosition;
    void function(dGeomID, dVector3) dGeomCopyPosition;
    dReal* function(dGeomID)  dGeomGetRotation;
    void function(dGeomID, dMatrix3) dGeomCopyRotation;
    void function(dGeomID, dQuaternion) dGeomGetQuaternion;
    void function(dGeomID, dReal[6]) dGeomGetAABB;
    int function(dGeomID) dGeomIsSpace;
    dSpaceID function(dGeomID) dGeomGetSpace;
    int function(dGeomID) dGeomGetClass;
    void function(dGeomID, uint) dGeomSetCategoryBits;
    void function(dGeomID, uint) dGeomSetCollideBits;
    uint function(dGeomID) dGeomGetCategoryBits;
    uint function(dGeomID) dGeomGetCollideBits;
    void function(dGeomID) dGeomEnable;
    void function(dGeomID) dGeomDisable;
    int function(dGeomID) dGeomIsEnabled;
    void function(dGeomID, dReal, dReal, dReal) dGeomSetOffsetPosition;
    void function(dGeomID, in dMatrix3) dGeomSetOffsetRotation;
    void function(dGeomID, in dQuaternion) dGeomSetOffsetQuaternion;
    void function(dGeomID, dReal, dReal, dReal) dGeomSetOffsetWorldPosition;
    void function(dGeomID, in dMatrix3) dGeomSetOffsetWorldRotation;
    void function(dGeomID, int dQuaternion) dGeomSetOffsetWorldQuaternion;
    void function(dGeomID) dGeomClearOffset;
    int function(dGeomID) dGeomIsOffset;
    dReal* function(dGeomID) dGeomGetOffsetPosition;
    void function(dGeomID, dVector3) dGeomCopyOffsetPosition;
    dReal* function(dGeomID) dGeomGetOffsetRotation;
    void function(dGeomID, dQuaternion) dGeomGetOffsetQuaternion;
    int function(dGeomID, dGeomID, int, dContactGeom*, int) dCollide;
    void function(dSpaceID, void*, dNearCallback) dSpaceCollide;
    void function(dGeomID, dGeomID, void*, dNearCallback) dSpaceCollide2;
    dGeomID function(dSpaceID, dReal) dCreateSphere;
    void function(dGeomID, dReal) dGeomSphereSetRadius;
    dReal function(dGeomID) dGeomSphereGetRadius;
    dReal function(dGeomID, dReal, dReal, dReal) dGeomSpherePointDepth;
    dGeomID function(dSpaceID, dReal*, uint, dReal*, uint, uint*) dCreateConvex;
    void function(dGeomID, dReal*, uint, dReal*, uint, uint*) dGeomSetConvex;
    dGeomID function(dSpaceID, dReal, dReal, dReal) dCreateBox;
    void function(dGeomID, dReal, dReal, dReal) dGeomBoxSetLengths;
    void function(dGeomID, dVector3) dGeomBoxGetLengths;
    dReal function(dGeomID, dReal, dReal, dReal) dGeomBoxPointDepth;
    dGeomID function(dSpaceID, dReal, dReal, dReal, dReal) dCreatePlane;
    void function(dGeomID, dReal, dReal, dReal, dReal) dGeomPlaneSetParams;
    void function(dGeomID, dVector4) dGeomPlaneGetParams;
    dReal function(dGeomID, dReal, dReal, dReal) dGeomPlanePointDepth;
    dGeomID function(dSpaceID, dReal, dReal) dCreateCapsule;
    void function(dGeomID, dReal, dReal) dGeomCapsuleSetParams;
    void function(dGeomID, dReal*, dReal*) dGeomCapsuleGetParams;
    dReal function(dGeomID, dReal, dReal, dReal) dGeomCapsulePointDepth;
    dGeomID function(dSpaceID, dReal, dReal) dCreateCylinder;
    void function(dGeomID, dReal, dReal) dGeomCylinderSetParams;
    void function(dGeomID, dReal*, dReal*) dGeomCylinderGetParams;
    dGeomID function(dSpaceID, dReal) dCreateRay;
    void function(dGeomID, dReal) dGeomRaySetLength;
    dReal function(dGeomID) dGeomRayGetLength;
    void function(dGeomID, dReal, dReal, dReal, dReal, dReal, dReal) dGeomRaySet;
    void function(dGeomID, dVector3, dVector3) dGeomRayGet;
    void function(dGeomID, int, int) dGeomRaySetParams;
    void function(dGeomID, int*, int*) dGeomRayGetParams;
    void function(dGeomID, int) dGeomRaySetClosestHit;
    int function(dGeomID) dGeomRayGetClosestHit;
    dGeomID function(dSpaceID) dCreateGeomTransform;
    void function(dGeomID, dGeomID) dGeomTransformSetGeom;
    dGeomID function(dGeomID) dGeomTransformGetGeom;
    void function(dGeomID, int) dGeomTransformSetCleanup;
    int function(dGeomID) dGeomTransformGetCleanup;
    void function(dGeomID, int) dGeomTransformSetInfo;
    int function(dGeomID) dGeomTransformGetInfo;
    dGeomID function(dSpaceID, dHeightfieldDataID, int) dCreateHeightfield;
    dHeightfieldDataID function() dGeomHeightfieldDataCreate;
    void function(dHeightfieldDataID) dGeomHeightfieldDataDestroy;
    void function(dHeightfieldDataID, void*, dHeightfieldGetHeight, dReal, dReal, int, int, dReal, dReal, dReal, int) dGeomHeightfieldDataBuildCallback;
    void function(dHeightfieldDataID, in ubyte*, int, dReal, dReal, int, int, dReal, dReal, dReal, int) dGeomHeightfieldDataBuildByte;
    void function(dHeightfieldDataID, in short*, int, dReal, dReal, int, int, dReal, dReal, dReal, int) dGeomHeightfieldDataBuildShort;
    void function(dHeightfieldDataID, in float*, int, dReal, dReal, int, int, dReal, dReal, dReal, int) dGeomHeightfieldDataBuildSingle;
    void function(dHeightfieldDataID, in double*, int, dReal, dReal, int, int, dReal, dReal, dReal, int) dGeomHeightfieldDataBuildDouble;
    void function(dHeightfieldDataID, dReal, dReal) dGeomHeightfieldDataSetBounds;
    void function(dGeomID, dHeightfieldDataID) dGeomHeightfieldSetHeightfieldData;
    dHeightfieldDataID function(dGeomID) dGeomHeightfieldGetHeightfieldData;
    void function(in dVector3, in dVector3, in dVector3, in dVector3, dVector3, dVector3) dClosestLineSegmentPoints;
    int function(in dVector3, in dMatrix3, in dVector3, in dVector3, in dMatrix3, in dVector3) dBoxTouchesBox;
    int function(in dVector3, in dMatrix3, in dVector3, in dVector3, in dMatrix3, in dVector3, dVector3, dReal*, int*, int, dContactGeom*, int) dBoxBox;
    void function(dGeomID, dReal[6]) dInfiniteAABB;
    int function(in dGeomClass*) dCreateGeomClass;
    void* function(dGeomID) dGeomGetClassData;
    dGeomID function(int) dCreateGeom;
    void function(int, int, dColliderFn) dSetColliderOverride;

    alias dCreateCapsule dCreateCCylinder;
    alias dGeomCapsuleSetParams dGeomCCylinderSetParams;
    alias dGeomCapsuleGetParams dGeomCCylinderGetParams;
    alias dGeomCapsulePointDepth dGeomCCylinderPointDepth;

    // collision_space.h
    dSpaceID function(dSpaceID) dSimpleSpaceCreate;
    dSpaceID function(dSpaceID) dHashSpaceCreate;
    dSpaceID function(dSpaceID, in dVector3, in dVector3, int) dQuadTreeSpaceCreate;
    dSpaceID function(dSpaceID, int) dSweepAndPruneSpaceCreate;
    void function(dSpaceID) dSpaceDestroy;
    void function(dSpaceID, int, int) dHashSpaceSetLevels;
    void function(dSpaceID, int*, int*) dHashSpaceGetLevels;
    void function(dSpaceID, int) dSpaceSetCleanup;
    int function(dSpaceID) dSpaceGetCleanup;
    void function(dSpaceID, int) dSpaceSetSublevel;
    int function(dSpaceID) dSpaceGetSublevel;
    void function(dSpaceID, dGeomID) dSpaceAdd;
    void function(dSpaceID, dGeomID) dSpaceRemove;
    int function(dSpaceID, dGeomID) dSpaceQuery;
    void function(dSpaceID) dSpaceClean;
    int function(dSpaceID) dSpaceGetNumGeoms;
    dGeomID function(dSpaceID, int) dSpaceGetGeom;
    int function(dSpaceID) dSpaceGetClass;

    // collision_trimesh.h
    dTriMeshDataID function() dGeomTriMeshDataCreate;
    void function(dTriMeshDataID) dGeomTriMeshDataDestroy;
    void function(dTriMeshDataID, int, void*) dGeomTriMeshDataSet;
    void* function(dTriMeshDataID, int) dGeomTriMeshDataGet;
    void function(dGeomID, dMatrix4) dGeomTriMeshSetLastTransform;
    dReal* function(dGeomID) dGeomTriMeshGetLastTransform;
    void function(dTriMeshDataID, in void*, int, int, in void*, int, int) dGeomTriMeshDataBuildSingle;
    void function(dTriMeshDataID, in void*, int, int, in void*, int, int, in void*) dGeomTriMeshDataBuildSingle1;
    void function(dTriMeshDataID, in void*, int, int, in void*, int, int) dGeomTriMeshDataBuildDouble;
    void function(dTriMeshDataID, in void*, int, int, in void*, int, int, in void*) dGeomTriMeshDataBuildDouble1;
    void function(dTriMeshDataID, in dReal*, int, in dTriIndex*, int) dGeomTriMeshDataBuildSimple;
    void function(dTriMeshDataID, in dReal*, int, in dTriIndex*, int, in int*) dGeomTriMeshDataBuildSimple1;
    void function(dTriMeshDataID) dGeomTriMeshDataPreprocess;
    void function(dTriMeshDataID, ubyte**, int*) dGeomTriMeshDataGetBuffer;
    void function(dTriMeshDataID, ubyte*) dGeomTriMeshDataSetBuffer;
    void function(dGeomID, dTriCallback) dGeomTriMeshSetCallback;
    dTriCallback function(dGeomID) dGeomTriMeshGetCallback;
    void function(dGeomID, dTriArrayCallback) dGeomTriMeshSetArrayCallback;
    dTriArrayCallback function(dGeomID) dGeomTriMeshGetArrayCallback;
    void function(dGeomID, dTriRayCallback) dGeomTriMeshSetRayCallback;
    dTriRayCallback function(dGeomID) dGeomTriMeshGetRayCallback;
    void function(dGeomID, dTriTriMergeCallback) dGeomTriMeshSetTriMergeCallback;
    dTriTriMergeCallback function(dGeomID) dGeomTriMeshGetTriMergeCallback;
    dGeomID function(dSpaceID, dTriMeshDataID, dTriCallback, dTriArrayCallback, dTriRayCallback) dCreateTriMesh;
    void function(dGeomID, dTriMeshDataID) dGeomTriMeshSetData;
    dTriMeshDataID function(dGeomID) dGeomTriMeshGetData;
    void function(dGeomID, int, int) dGeomTriMeshEnableTC;
    int function(dGeomID, int) dGeomTriMeshIsTCEnabled;
    void function(dGeomID) dGeomTriMeshClearTCCache;
    dTriMeshDataID function(dGeomID) dGeomTriMeshGetTriMeshDataID;
    void function(dGeomID, int, dVector3*, dVector3*, dVector3*) dGeomTriMeshGetTriangle;
    void function(dGeomID, int, dReal, dReal, dVector3) dGeomTriMeshGetPoint;
    int function(dGeomID) dGeomTriMeshGetTriangleCount;
    void function(dTriMeshDataID) dGeomTriMeshDataUpdate;

    // error.h
    void function(dMessageFunction) dSetErrorHandler;
    void function(dMessageFunction) dSetDebugHandler;
    void function(dMessageFunction) dSetMessageHandler;
    dMessageFunction function() dGetErrorHandler;
    dMessageFunction function() dGetDebugHandler;
    dMessageFunction function() dGetMessageHandler;
    void function(int, in char*, ...) dError;
    void function(int, in char*, ...) dDebug;
    void function(int, in char*, ...) dMessage;

    // mass.h
    int function(in dMass*) dMassCheck;
    void function(dMass*) dMassSetZero;
    void function(dMass*, dReal, dReal, dReal, dReal, dReal, dReal, dReal, dReal, dReal, dReal) dMassSetParameters;
    void function(dMass*, dReal, dReal) dMassSetSphere;
    void function(dMass*, dReal, dReal) dMassSetSphereTotal;
    void function(dMass*, dReal, int, dReal, dReal) dMassSetCapsule;
    void function(dMass*, dReal, int, dReal, dReal) dMassSetCapsuleTotal;
    void function(dMass*, dReal, int, dReal, dReal) dMassSetCylinder;
    void function(dMass*, dReal, int, dReal, dReal) dMassSetCylinderTotal;
    void function(dMass*, dReal, dReal, dReal, dReal) dMassSetBox;
    void function(dMass*, dReal, dReal, dReal, dReal) dMassSetBoxTotal;
    void function(dMass*, dReal, dGeomID) dMassSetTrimesh;
    void function(dMass*, dReal, dGeomID) dMassSetTrimeshTotal;
    void function(dMass*, dReal) dMassAdjust;
    void function(dMass*, dReal, dReal, dReal) dMassTranslate;
    void function(dMass*, in dMatrix3) dMassRotate;
    void function(dMass*, in dMass*) dMassAdd;

    // matrix.h
    void function(dReal*, int) dSetZero;
    void function(dReal*, int, dReal) dSetValue;
    dReal function(in dReal*, in dReal*, int) dDot;
    void function(dReal*, in dReal*, in dReal*, int, int, int) dMultiply0;
    void function(dReal*, in dReal*, in dReal*, int, int, int) dMultiply1;
    void function(dReal*, in dReal*, in dReal*, int, int, int) dMultiply2;
    int function(dReal*, int) dFactorCholesky;
    void function(in dReal*, dReal*, int) dSolveCholesky;
    int function(in dReal*, dReal*, int) dInvertPDMatrix;
    int function(in dReal*, int) dIsPositiveDefinite;
    void function(dReal*, dReal*, int, int) dFactorLDLT;
    void function(in dReal*, dReal*, int, int) dSolveL1;
    void function(in dReal*, dReal*, int, int) dSolveL1T;
    void function(dReal*, in dReal*, int) dVectorScale;
    void function(in dReal*, in dReal*, dReal*, int, int) dSolveLDLT;
    void function(dReal*, dReal*, in dReal*, int, int) dLDLTAddTL;
    void function(dReal**, in int*, dReal*, dReal*, int, int, int, int) dLDLTRemove;
    void function(dReal*, int, int, int) dRemoveRowCol;

    // memory.h
    void function(dAllocFunction) dSetAllocHandler;
    void function(dReallocFunction) dSetReallocHandler;
    void function(dFreeFunction) dSetFreeHandler;
    dAllocFunction function() dGetAllocHandler;
    dReallocFunction function() dGetReallocHandler;
    dFreeFunction function() dGetFreeHandler;
    void* function(size_t) dAlloc;
    void* function(void*, size_t, size_t) dRealloc;
    void function(void*, size_t) dFree;

    // misc.h
    int function() dTestRand;
    uint function() dRand;
    uint function() dRandGetSeed;
    void function(uint) dRandSetSeed;
    int function(int) dRandInt;
    dReal function() dRandReal;
    void function(in dReal*, int, int, char*, FILE*) dPrintMatrix;
    void function(dReal, int, dReal) dMakeRandomVector;
    void function(dReal*, int, int, dReal) dMakeRandomMatrix;
    void function(dReal*, int) dClearUpperTriangle;
    dReal function(in dReal*, in dReal*, int, int) dMaxDifference;
    dReal function(in dReal*, in dReal*, int) dMaxDifferenceLowerTriangle;

    // objects.h
    dWorldID function() dWorldCreate;
    void function(dWorldID) dWorldDestroy;
    void function(dWorldID, dReal, dReal, dReal) dWorldSetGravity;
    void function(dWorldID, dVector3) dWorldGetGravity;
    void function(dWorldID, dReal) dWorldSetERP;
    dReal function(dWorldID) dWorldGetERP;
    void function(dWorldID, dReal) dWorldSetCFM;
    dReal function(dWorldID) dWorldGetCFM;
    void function(dWorldID, dReal) dWorldStep;
    void function(dWorldID, dReal, dReal, dReal, dReal, dVector3) dWorldImpulseToForce;
    void function(dWorldID, dReal) dWorldQuickStep;
    void function(dWorldID, int) dWorldSetQuickStepNumIterations;
    int function(dWorldID) dWorldGetQuickStepNumIterations;
    void function(dWorldID, dReal) dWorldSetQuickStepW;
    dReal function(dWorldID) dWorldGetQuickStepW;
    void function(dWorldID, dReal) dWorldSetContactMaxCorrectingVel;
    dReal function(dWorldID) dWorldGetContactMaxCorrectingVel;
    void function(dWorldID, dReal) dWorldSetContactSurfaceLayer;
    dReal function(dWorldID) dWorldGetContactSurfaceLayer;
    void function(dWorldID, dReal, int) dWorldStepFast1;
    void function(dWorldID, int) dWorldSetAutoEnableDepthSF1;
    int function(dWorldID) dWorldGetAutoEnableDepthSF1;
    dReal function(dWorldID) dWorldGetAutoDisableLinearThreshold;
    void function(dWorldID, dReal) dWorldSetAutoDisableLinearThreshold;
    dReal function(dWorldID) dWorldGetAutoDisableAngularThreshold;
    void function(dWorldID, dReal) dWorldSetAutoDisableAngularThreshold;
    int function(dWorldID) dWorldGetAutoDisableAverageSamplesCount;
    void function(dWorldID, uint) dWorldSetAutoDisableAverageSamplesCount;
    int function(dWorldID) dWorldGetAutoDisableSteps;
    void function(dWorldID, int) dWorldSetAutoDisableSteps;
    dReal function(dWorldID) dWorldGetAutoDisableTime;
    void function(dWorldID, dReal) dWorldSetAutoDisableTime;
    int function(dWorldID) dWorldGetAutoDisableFlag;
    void function(dWorldID, int) dWorldSetAutoDisableFlag;
    dReal function(dWorldID) dWorldGetLinearDampingThreshold;
    void function(dWorldID, dReal) dWorldSetLinearDampingThreshold;
    dReal function(dWorldID) dWorldGetAngularDampingThreshold;
    void function(dWorldID, dReal) dWorldSetAngularDampingThreshold;
    dReal function(dWorldID) dWorldGetLinearDamping;
    void function(dWorldID, dReal) dWorldSetLinearDamping;
    dReal function(dWorldID) dWorldGetAngularDamping;
    void function(dWorldID, dReal) dWorldSetAngularDamping;
    void function(dWorldID, dReal, dReal) dWorldSetDamping;
    dReal function(dWorldID) dWorldGetMaxAngularSpeed;
    void function(dWorldID, dReal) dWorldSetMaxAngularSpeed;
    dReal function(dBodyID) dBodyGetAutoDisableLinearThreshold;
    void function(dBodyID, dReal) dBodySetAutoDisableLinearThreshold;
    dReal function(dBodyID) dBodyGetAutoDisableAngularThreshold;
    void function(dBodyID, dReal) dBodySetAutoDisableAngularThreshold;
    int function(dBodyID) dBodyGetAutoDisableAverageSamplesCount;
    void function(dBodyID, uint) dBodySetAutoDisableAverageSamplesCount;
    int function(dBodyID) dBodyGetAutoDisableSteps;
    void function(dBodyID, int) dBodySetAutoDisableSteps;
    dReal function(dBodyID) dBodyGetAutoDisableTime;
    void function(dBodyID, dReal) dBodySetAutoDisableTime;
    int function(dBodyID) dBodyGetAutoDisableFlag;
    void function(dBodyID, int) dBodySetAutoDisableFlag;
    void function(dBodyID) dBodySetAutoDisableDefaults;
    dWorldID function(dBodyID) dBodyGetWorld;
    dBodyID function(dWorldID) dBodyCreate;
    void function(dBodyID) dBodyDestroy;
    void function(dBodyID, void*) dBodySetData;
    void* function(dBodyID) dBodyGetData;
    void function(dBodyID, dReal, dReal, dReal) dBodySetPosition;
    void function(dBodyID, in dMatrix3) dBodySetRotation;
    void function(dBodyID, in dQuaternion) dBodySetQuaternion;
    void function(dBodyID, dReal, dReal, dReal) dBodySetLinearVel;
    void function(dBodyID, dReal, dReal, dReal) dBodySetAngularVel;
    dReal* function(dBodyID) dBodyGetPosition;
    void function(dBodyID, dVector3) dBodyCopyPosition;
    dReal* function(dBodyID) dBodyGetRotation;
    void function(dBodyID, dMatrix3) dBodyCopyRotation;
    dReal* function(dBodyID) dBodyGetQuaternion;
    void function(dBodyID, dQuaternion) dBodyCopyQuaternion;
    dReal* function(dBodyID) dBodyGetLinearVel;
    dReal* function(dBodyID) dBodyGetAngularVel;
    void function(dBodyID, in dMass*) dBodySetMass;
    void function(dBodyID, dMass*) dBodyGetMass;
    void function(dBodyID, dReal, dReal, dReal) dBodyAddForce;
    void function(dBodyID, dReal, dReal, dReal) dBodyAddTorque;
    void function(dBodyID, dReal, dReal, dReal) dBodyAddRelForce;
    void function(dBodyID, dReal, dReal, dReal) dBodyAddRelTorque;
    void function(dBodyID, dReal, dReal, dReal, dReal, dReal, dReal) dBodyAddForceAtPos;
    void function(dBodyID, dReal, dReal, dReal, dReal, dReal, dReal) dBodyAddForceAtRelPos;
    void function(dBodyID, dReal, dReal, dReal, dReal, dReal, dReal) dBodyAddRelForceAtPos;
    void function(dBodyID, dReal, dReal, dReal, dReal, dReal, dReal) dBodyAddRelForceAtRelPos;
    dReal* function(dBodyID) dBodyGetForce;
    dReal* function(dBodyID) dBodyGetTorque;
    void function(dBodyID, dReal, dReal, dReal) dBodySetForce;
    void function(dBodyID, dReal, dReal, dReal) dBodySetTorque;
    void function(dBodyID, dReal, dReal, dReal, dVector3) dBodyGetRelPointPos;
    void function(dBodyID, dReal, dReal, dReal, dVector3) dBodyGetRelPointVel;
    void function(dBodyID, dReal, dReal, dReal, dVector3) dBodyGetPointVel;
    void function(dBodyID, dReal, dReal, dReal, dVector3) dBodyGetPosRelPoint;
    void function(dBodyID, dReal, dReal, dReal, dVector3) dBodyVectorToWorld;
    void function(dBodyID, dReal, dReal, dReal, dVector3) dBodyVectorFromWorld;
    void function(dBodyID, int) dBodySetFiniteRotationMode;
    void function(dBodyID, dReal, dReal, dReal) dBodySetFiniteRotationAxis;
    int function(dBodyID) dBodyGetFiniteRotationMode;
    void function(dBodyID, dVector3) dBodyGetFiniteRotationAxis;
    int function(dBodyID) dBodyGetNumJoints;
    dJointID function(dBodyID) dBodyGetJoint;
    void function(dBodyID) dBodySetDynamic;
    void function(dBodyID) dBodySetKinematic;
    int function(dBodyID) dBodyIsKinematic;
    void function(dBodyID) dBodyEnable;
    void function(dBodyID) dBodyDisable;
    int function(dBodyID) dBodyIsEnabled;
    void function(dBodyID, int) dBodySetGravityMode;
    int function(dBodyID) dBodyGetGravityMode;
    void function(dBodyID, void (*callback)(dBodyID)) dBodySetMovedCallback;
    dGeomID function(dBodyID) dBodyGetFirstGeom;
    dGeomID function(dGeomID) dBodyGetNextGeom;
    void function(dBodyID) dBodySetDampingDefaults;
    dReal function(dBodyID) dBodyGetLinearDamping;
    void function(dBodyID, dReal) dBodySetLinearDamping;
    dReal function(dBodyID) dBodyGetAngularDamping;
    void function(dBodyID, dReal) dBodySetAngularDamping;
    void function(dBodyID, dReal, dReal) dBodySetDamping;
    dReal function(dBodyID) dBodyGetLinearDampingThreshold;
    void function(dBodyID, dReal) dBodySetLinearDampingThreshold;
    dReal function(dBodyID) dBodyGetAngularDampingThreshold;
    void function(dBodyID, dReal) dBodySetAngularDampingThreshold;
    dReal function(dBodyID) dBodyGetMaxAngularSpeed;
    void function(dBodyID, dReal) dBodySetMaxAngularSpeed;
    int function(dBodyID) dBodyGetGyroscopicMode;
    void function(dBodyID, int) dBodySetGyroscopicMode;
    dJointID function(dWorldID, dJointGroupID) dJointCreateBall;
    dJointID function(dWorldID, dJointGroupID) dJointCreateHinge;
    dJointID function(dWorldID, dJointGroupID) dJointCreateSlider;
    dJointID function(dWorldID, dJointGroupID, in dContact*) dJointCreateContact;
    dJointID function(dWorldID, dJointGroupID) dJointCreateHinge2;
    dJointID function(dWorldID, dJointGroupID) dJointCreateUniversal;
    dJointID function(dWorldID, dJointGroupID) dJointCreatePR;
    dJointID function(dWorldID, dJointGroupID) dJointCreatePU;
    dJointID function(dWorldID, dJointGroupID) dJointCreatePiston;
    dJointID function(dWorldID, dJointGroupID) dJointCreateFixed;
    dJointID function(dWorldID, dJointGroupID) dJointCreateNull;
    dJointID function(dWorldID, dJointGroupID) dJointCreateAMotor;
    dJointID function(dWorldID, dJointGroupID) dJointCreateLMotor;
    dJointID function(dWorldID, dJointGroupID) dJointCreatePlane2D;
    void function(dJointID) dJointDestroy;
    dJointGroupID function(int) dJointGroupCreate;
    void function(dJointGroupID) dJointGroupDestroy;
    void function(dJointGroupID) dJointGroupEmpty;
    int function(dJointID) dJointGetNumBodies;
    void function(dJointID, dBodyID, dBodyID) dJointAttach;
    void function(dJointID) dJointEnable;
    void function(dJointID) dJointDisable;
    int function(dJointID) dJointIsEnabled;
    void function(dJointID, void*) dJointSetData;
    void* function(dJointID) dJointGetData;
    dJointType function(dJointID) dJointGetType;
    dBodyID function(dJointID, int) dJointGetBody;
    void function(dJointID, dJointFeedback*) dJointSetFeedback;
    dJointFeedback* function(dJointID) dJointGetFeedback;
    void function(dJointID, dReal, dReal, dReal) dJointSetBallAnchor;
    void function(dJointID, dReal, dReal, dReal) dJointSetBallAnchor2;
    void function(dJointID, int, dReal) dJointSetBallParam;
    void function(dJointID, dReal, dReal, dReal) dJointSetHingeAnchor;
    void function(dJointID, dReal, dReal, dReal, dReal, dReal, dReal) dJointSetHingeAnchorDelta;
    void function(dJointID, dReal, dReal, dReal) dJointSetHingeAxis;
    void function(dJointID, dReal, dReal, dReal, dReal) dJointSetHingeAxisOffset;
    void function(dJointID, int, dReal) dJointSetHingeParam;
    void function(dJointID, dReal) dJointAddHingeTorque;
    void function(dJointID, dReal, dReal, dReal) dJointSetSliderAxis;
    void function(dJointID, dReal, dReal, dReal, dReal, dReal, dReal) dJointSetSliderAxisDelta;
    void function(dJointID, int, dReal) dJointSetSliderParam;
    void function(dJointID, dReal) dJointAddSliderForce;
    void function(dJointID, dReal, dReal, dReal) dJointSetHinge2Anchor;
    void function(dJointID, dReal, dReal, dReal) dJointSetHinge2Axis1;
    void function(dJointID, dReal, dReal, dReal) dJointSetHinge2Axis2;
    void function(dJointID, int, dReal) dJointSetHinge2Param;
    void function(dJointID, dReal, dReal) dJointAddHinge2Torques;
    void function(dJointID, dReal, dReal, dReal) dJointSetUniversalAnchor;
    void function(dJointID, dReal, dReal, dReal) dJointSetUniversalAxis1;
    void function(dJointID, dReal, dReal, dReal, dReal, dReal) dJointSetUniversalAxis1Offset;
    void function(dJointID, dReal, dReal, dReal) dJointSetUniversalAxis2;
    void function(dJointID, dReal, dReal, dReal, dReal, dReal) dJointSetUniversalAxis2Offset;
    void function(dJointID, int, dReal) dJointSetUniversalParam;
    void function(dJointID, dReal, dReal) dJointAddUniversalTorques;
    void function(dJointID, dReal, dReal, dReal) dJointSetPRAnchor;
    void function(dJointID, dReal, dReal, dReal) dJointSetPRAxis1;
    void function(dJointID, dReal, dReal, dReal) dJointSetPRAxis2;
    void function(dJointID, int, dReal) dJointSetPRParam;
    void function(dJointID, dReal) dJointAddPRTorque;
    void function(dJointID, dReal, dReal, dReal) dJointSetPUAnchor;
    void function(dJointID, dReal, dReal, dReal, dReal, dReal, dReal) dJointSetPUAnchorOffset;
    void function(dJointID, dReal, dReal, dReal) dJointSetPUAxis1;
    void function(dJointID, dReal, dReal, dReal) dJointSetPUAxis2;
    void function(dJointID, dReal, dReal, dReal) dJointSetPUAxis3;
    void function(dJointID, dReal, dReal, dReal) dJointSetPUAxisP;
    void function(dJointID, int, dReal) dJointSetPUParam;
    void function(dJointID, dReal, dReal, dReal) dJointSetPistonAnchor;
    void function(dJointID, dReal, dReal, dReal, dReal, dReal, dReal) dJointSetPistonAnchorOffset;
    void function(dJointID, dReal, dReal, dReal) dJointSetPistonAxis;
    void function(dJointID, int, dReal) dJointSetPistonParam;
    void function(dJointID, dReal) dJointAddPistonForce;
    void function(dJointID) dJointSetFixed;
    void function(dJointID, int, dReal) dJointSetFixedParam;
    void function(dJointID, int) dJointSetAMotorNumAxes;
    void function(dJointID, int, int, dReal, dReal, dReal) dJointSetAMotorAxis;
    void function(dJointID, int, dReal) dJointSetAMotorAngle;
    void function(dJointID, int, dReal) dJointSetAMotorParam;
    void function(dJointID, int) dJointSetAMotorMode;
    void function(dJointID, dReal, dReal, dReal) dJointAddAMotorTorques;
    void function(dJointID, int) dJointSetLMotorNumAxes;
    void function(dJointID, int, int, dReal, dReal, dReal) dJointSetLMotorAxis;
    void function(dJointID, int, dReal) dJointSetLMotorParam;
    void function(dJointID, int, dReal) dJointSetPlane2DXParam;
    void function(dJointID, int, dReal) dJointSetPlane2DYParam;
    void function(dJointID, int, dReal) dJointSetPlane2DAngleParam;
    void function(dJointID, dVector3) dJointGetBallAnchor;
    void function(dJointID, dVector3) dJointGetBallAnchor2;
    dReal function(dJointID, int) dJointGetBallParam;
    void function(dJointID, dVector3) dJointGetHingeAnchor;
    void function(dJointID, dVector3) dJointGetHingeAnchor2;
    void function(dJointID, dVector3) dJointGetHingeAxis;
    dReal function(dJointID, int) dJointGetHingeParam;
    dReal function(dJointID) dJointGetHingeAngle;
    dReal function(dJointID) dJointGetHingeAngleRate;
    dReal function(dJointID) dJointGetSliderPosition;
    dReal function(dJointID) dJointGetSliderPositionRate;
    void function(dJointID, dVector3) dJointGetSliderAxis;
    dReal function(dJointID, int) dJointGetSliderParam;
    void function(dJointID, dVector3) dJointGetHinge2Anchor;
    void function(dJointID, dVector3) dJointGetHinge2Anchor2;
    void function(dJointID, dVector3) dJointGetHinge2Axis1;
    void function(dJointID, dVector3) dJointGetHinge2Axis2;
    dReal function(dJointID, int) dJointGetHinge2Param;
    dReal function(dJointID) dJointGetHinge2Angle1;
    dReal function(dJointID) dJointGetHinge2Angle1Rate;
    dReal function(dJointID) dJointGetHinge2Angle2Rate;
    void function(dJointID, dVector3) dJointGetUniversalAnchor;
    void function(dJointID, dVector3) dJointGetUniversalAnchor2;
    void function(dJointID, dVector3) dJointGetUniversalAxis1;
    void function(dJointID, dVector3) dJointGetUniversalAxis2;
    dReal function(dJointID, int) dJointGetUniversalParam;
    void function(dJointID, dReal*, dReal*) dJointGetUniversalAngles;
    dReal function(dJointID) dJointGetUniversalAngle1;
    dReal function(dJointID) dJointGetUniversalAngle2;
    dReal function(dJointID) dJointGetUniversalAngle1Rate;
    dReal function(dJointID) dJointGetUniversalAngle2Rate;
    void function(dJointID, dVector3) dJointGetPRAnchor;
    dReal function(dJointID) dJointGetPRPosition;
    dReal function(dJointID) dJointGetPRPositionRate;
    dReal function(dJointID) dJointGetPRAngle;
    dReal function(dJointID) dJointGetPRAngleRate;
    void function(dJointID, dVector3) dJointGetPRAxis1;
    void function(dJointID, dVector3) dJointGetPRAxis2;
    dReal function(dJointID, int) dJointGetPRParam;
    void function(dJointID, dVector3) dJointGetPUAnchor;
    dReal function(dJointID) dJointGetPUPosition;
    dReal function(dJointID) dJointGetPUPositionRate;
    void function(dJointID, dVector3) dJointGetPUAxis1;
    void function(dJointID, dVector3) dJointGetPUAxis2;
    void function(dJointID, dVector3) dJointGetPUAxis3;
    void function(dJointID, dVector3) dJointGetPUAxisP;
    void function(dJointID, dReal*, dReal*) dJointGetPUAngles;
    dReal function(dJointID) dJointGetPUAngle1;
    dReal function(dJointID) dJointGetPUAngle1Rate;
    dReal function(dJointID) dJointGetPUAngle2;
    dReal function(dJointID) dJointGetPUAngle2Rate;
    dReal function(dJointID, int) dJointGetPUParam;
    dReal function(dJointID) dJointGetPistonPosition;
    dReal function(dJointID) dJointGetPistonPositionRate;
    dReal function(dJointID) dJointGetPistonAngle;
    dReal function(dJointID) dJointGetPistonAngleRate;
    void function(dJointID, dVector3) dJointGetPistonAnchor;
    void function(dJointID, dVector3) dJointGetPistonAnchor2;
    void function(dJointID, dVector3) dJointGetPistonAxis;
    dReal function(dJointID, int) dJointGetPistonParam;
    int function(dJointID) dJointGetAMotorNumAxes;
    void function(dJointID, int, dVector3) dJointGetAMotorAxis;
    int function(dJointID, int) dJointGetAMotorAxisRel;
    dReal function(dJointID, int) dJointGetAMotorAngle;
    dReal function(dJointID, int) dJointGetAMotorAngleRate;
    dReal function(dJointID, int) dJointGetAMotorParam;
    int function(dJointID) dJointGetAMotorMode;
    int function(dJointID) dJointGetLMotorNumAxes;
    void function(dJointID, int, dVector3) dJointGetLMotorAxis;
    dReal function(dJointID, int) dJointGetLMotorParam;
    dReal function(dJointID, int) dJointGetFixedParam;
    dJointID function(dBodyID, dBodyID) dConnectingJoint;
    int function(dBodyID, dBodyID, dJointID*) dConnectingJointList;
    int function(dBodyID, dBodyID) dAreConnected;
    int function(dBodyID, dBodyID, int) dAreConnectedExcluding;

    // odeinit.h
    void function() dInitODE;
    int function(uint) dInitODE2;
    int function(uint) dAllocateODEDataForThread;
    void function() dCleanupODEAllDataForThread;
    void function() dCloseODE;

    // rotation.h
    void function(dMatrix3) dRSetIdentity;
    void function(dMatrix3, dReal, dReal, dReal, dReal) dRFromAxisAndAngle;
    void function(dMatrix3, dReal, dReal, dReal) dRFromEulerAngles;
    void function(dMatrix3, dReal, dReal, dReal, dReal, dReal, dReal) dRFrom2Axes;
    void function(dMatrix3, dReal, dReal, dReal) dRFromZAxis;
    void function(dQuaternion) dQSetIdentity;
    void function(dQuaternion, dReal, dReal, dReal, dReal) dQFromAxisAndAngle;
    void function(dQuaternion, in dQuaternion, in dQuaternion) dQMultiply0;
    void function(dQuaternion, in dQuaternion, in dQuaternion) dQMultiply1;
    void function(dQuaternion, in dQuaternion, in dQuaternion) dQMultiply2;
    void function(dQuaternion, in dQuaternion, in dQuaternion) dQMultiply3;
    void function(dMatrix3, in dQuaternion) dRfromQ;
    void function(dQuaternion, in dMatrix3) dQfromR;
    void function(dReal[4], in dVector3, in dQuaternion) dDQfromW;

    // timer.h
    void function(dStopwatch*) dStopwatchReset;
    void function(dStopwatch*) dStopwatchStart;
    void function(dStopwatch*) dStopwatchStop;
    double function(dStopwatch*) dStopwatchTime;
    void function(in char*) dTimerStart;
    void function(in char*) dTimerNow;
    void function() dTimerEnd;
    void function(FILE*, int) dTimerReport;
    double function() dTimerTicksPerSecond;
    double function() dTimerResolution;

    // void function(dWorldID, FILE*, in char*) dWorldExportDIF;
    ");
}